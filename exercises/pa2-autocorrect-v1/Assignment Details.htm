<!DOCTYPE html>
<!-- saved from url=(0062)https://class.coursera.org/nlp/assignment/view?assignment_id=3 -->
<html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Assignment Details</title>

<link rel="stylesheet" href="https://class.coursera.org/assets/core/css/bootstrap.min.css">
<link rel="stylesheet" href="https://class.coursera.org/assets/core/css/main.css">
<link rel="stylesheet" href="https://spark-public.s3.amazonaws.com/nlp/static/css/main.css">
<link rel="stylesheet" href="https://class.coursera.org/assets/core/css/font-awesome.css">
<script type="text/javascript" async="" src="./Assignment Details_files/ga.js"></script><script type="text/javascript" src="./Assignment Details_files/jquery.js"></script>
<script type="text/javascript" src="./Assignment Details_files/json.js"></script>
<script type="text/javascript" src="./Assignment Details_files/hc_fix.js"></script>
<script src="./Assignment Details_files/bootstrap-modal.js" type="text/javascript"></script>
<script src="./Assignment Details_files/modal_focus.js" type="text/javascript"></script>
<script src="./Assignment Details_files/bind_modal_focus.js" type="text/javascript"></script>
<script src="./Assignment Details_files/MathJax.js"></script>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28377374-1']);
  _gaq.push(['_setDomainName', 'coursera.org']);
  _gaq.push(['_setAllowLinker', true]);  
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script><link rel="icon" href="https://spark-public.s3.amazonaws.com/nlp/static/images/favicon.ico">

<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -1px -1px 1px -1px; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script>window["_GOOG_TRANS_EXT_VER"] = "1";</script><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; border: 0; padding: 0; margin: 0}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0 !important; padding: 0 !important; margin: 0 !important; vertical-align: 0 !important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap ! important}
.MathJax img {display: inline ! important; float: none ! important}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block; overflow: hidden; width: 1px; height: 60ex}
.MathJax .MathJax_EmBox {display: block; overflow: hidden; width: 1px; height: 60em}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf') format('opentype')}
@font-face {font-family: MathJax_Main; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf') format('opentype'); font-weight: bold}
@font-face {font-family: MathJax_Main; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Math; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Caligraphic; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf') format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf') format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf') format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.woff') format('woff'), url('https://class.coursera.org/assets/core/js/mathjax2/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf') format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>

<body><div style="visibility: hidden; overflow-x: hidden; overflow-y: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; border-image: initial; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; "><div id="MathJax_Hidden"></div></div><div id="MathJax_Message" style="display: none; "></div>

    <a href="https://class.coursera.org/nlp/assignment/view?assignment_id=3#page-content" class="hidden">Skip Navigation</a>

	
<div class="topbar">
    <div class="topbar-inner">
        <div class="container-fluid">
            <a target="_new" href="http://www.coursera.org/" class="brand">
				Coursera				<span style="background-color:#387690;padding-top:100px" class="label warning">Beta</span>
			</a>
            <ul class="nav secondary-nav">
                                                    <li style="padding: 10px 10px 11px; color:#BFBFBF; font-size:14px; border-right: solid 1px #333">Javier Neira</li>
                    <li><a href="https://class.coursera.org/nlp/class/preferences">Preferences</a></li>
                    <li><a href="http://www.coursera.org/">All Courses</a></li>

                                        
                    
                    <li><a href="https://class.coursera.org/nlp/class/aboutus">About</a></li>
                    <li><a href="https://class.coursera.org/nlp/auth/feedback">Contact Us</a></li>
                    <li><a href="https://class.coursera.org/nlp/auth/logout">Logout</a></li>
                            </ul>
        </div>
    </div>
</div>


    <div id="banner-top">
    	<div id="course-logo-text">
        	<a href="https://class.coursera.org/nlp/class/index">
        		<img border="0" alt="Natural Language Processing" src="./Assignment Details_files/course-logo-text.png">
        	</a>
        </div>
    	<div id="banner-course-info">
        	<div class="course-instructor-name">Dan Jurafsky, <span style="font-weight:normal">Professor of Linguistics</span><br>
Chris Manning, <span style="font-weight:normal">Associate Professor  of Computer Science</span></div>
            <div class="course-time"></div>
        </div>
    </div>
    
        <div class="container-fluid">
        <div class="sidebar page-sidebar" id="page-sidebar">
            <ul style="list-style-type:none;margin-left:0px;">
		<li>
        <a href="https://class.coursera.org/nlp/class/index">
            <p class="navbar_item navbar_home">Home            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/wiki/view?page=syllabus">
            <p class="navbar_item navbar_wiki">Syllabus            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/wiki/view?page=courselogistics">
            <p class="navbar_item navbar_wiki">Course Logistics            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/wiki/view?page=FAQlist">
            <p class="navbar_item navbar_wiki">FAQ List            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/">
            <p class="navbar_item navbar_">            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/quiz/index">
            <p class="navbar_item navbar_quiz">Problem Sets            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/assignment/index">
            <p class="navbar_item navbar_assignment">Programming Assignments            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/lecture/index">
            <p class="navbar_item navbar_lecture">Video Lectures            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/wiki/view?page=lectureslides">
            <p class="navbar_item navbar_lecture">Lecture Slides            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/forum/index">
            <p class="navbar_item navbar_forum">Discussion Forums            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/">
            <p class="navbar_item navbar_">            </p>
        </a>
    </li>
		<li>
        <a href="https://class.coursera.org/nlp/wiki/view?page=aboutus">
            <p class="navbar_item navbar_wiki">About Us            </p>
        </a>
    </li>
	</ul>
        </div>
        <div class="content page-content" id="page-content">
            <h2>PA2 Autocorrect — View Assignment</h2>

<table style="margin-top: 10px">
	<tbody>
        <tr>
			<th style="width: 240px">Assignment Name</th>
			<td>PA2 Autocorrect</td>
		</tr>
		<tr>
			<th>Due Date</th>
			<td>Tue  3 Apr 2012 11:59:00 PM PDT</td>
		</tr>
		<tr>
			<th>Hard Deadline</th>
			<td>Fri 11 May 2012 11:59:00 PM PDT</td>
		</tr>
		<tr>
			<th>Submission</th>
			<td>Go to <a href="https://class.coursera.org/nlp/assignment/list">Assignments List</a> page to submit your solutions.</td>
		</tr>
		<tr>
			<th>Instructions</th>
			<td><h3>Homework 2: Autocorrect <a href="http://spark-public.s3.amazonaws.com/nlp/homework/pa2-autocorrect-v1.tar.gz">[starter code]</a></h3>
<h4>Correcting Spelling Errors</h4>


<table border="0" cellpadding="3" width="100%" bgcolor="#217292">
<tbody><tr>
<td><b><font color="#FFFFFF"><font size="+1">Due: Tuesday March 27 at 5:00pm Pacific Daylight Time</font></font></b></td>
</tr>
</tbody></table>
<p>
In this assignment you will be training a language model to build a spell checker. Specifically, you will be implementing part of
a noisy-channel model for spelling correction. We will give the likelihood term, or <b>edit model</b>, and your job is to make
a <b>language model</b>, the prior distribution in the noisy channel model.
At test time you will be given a sentence with exactly one typing error. We then select the correction which gets highest
likelihood under the noisy-channel model, using your language model as the prior.
Your language models will be evaluated for accuracy, the  number of valid corrections, divided by the number of test sentences.

</p><h4>Data</h4>
We will be using the writings of secondary-school children, collected by David Holbrook. Note that this corpus is available online,
so do not Google around for it!
The training data is located in the data/ directory. A summary of the contents:
<ul>
  <li><b>holbrook-tagged-train.dat:</b> the corpus to train your language models</li>
  <li><b>holbrook-tagged-dev.dat:</b> a corpus of spelling errors for development</li>
  <li><b>count_1edit.txt :</b> a table listing counts of edits <span class="MathJax_Preview"></span><span class="MathJax" id="MathJax-Element-1-Frame" role="textbox" aria-readonly="true" style=""><nobr><span class="math" id="MathJax-Span-1"><span style="display: inline-block; position: relative; height: 0px; font-size: 125%; width: 1.477em; "><span style="position: absolute; clip: rect(1.235em 1000em 2.603em -0.519em); top: -2.169em; left: 0em; "><span class="mrow" id="MathJax-Span-2"><span class="mi" id="MathJax-Span-3" style="font-family: MathJax_Math; font-style: italic; ">x</span><span class="texatom" id="MathJax-Span-4"><span class="mrow" id="MathJax-Span-5"><span class="mo" id="MathJax-Span-6" style="font-family: MathJax_Main; ">|</span></span></span><span class="mi" id="MathJax-Span-7" style="font-family: MathJax_Math; font-style: italic; ">w</span></span><span style="display: inline-block; width: 0px; height: 2.169em; "></span></span></span><span style="border-left-width: 0em; border-left-style: solid; border-left-color: initial; display: inline-block; overflow-x: hidden; overflow-y: hidden; width: 0px; height: 1.403em; vertical-align: -0.388em; "></span></span></nobr></span><script type="math/tex" id="MathJax-Element-1">x|w</script>, taken from Wikipedia. You don't need to modify any code which uses this.</li>
</ul>
Note that the data files do not contain &lt;s&gt; and &lt;/s&gt; markers, but the code which reads in the data adds them.

<h4>Your Assignment, Should You Choose to Accept It</h4>
Implement the following language models:
<ul>
  <li><b>Laplace Unigram Language Model:</b> a unigram model with add-one smoothing. Treat out-of-vocabulary items as a word which was seen zero times in training.</li>
  <li><b>Laplace Bigram Language Model:</b> a bigram model with add-one smoothing.</li>
  <li><b>Stupid Backoff Language Model:</b> use an unsmoothed bigram model combined with backoff to an add-one smoothed unigram model</li>
  <li><b>Custom Language Model:</b> implement a language model of your choice. Ideas include interpolated Kneser-Ney, Good-Turing, linear interpolated, trigram, or any other language model you can come up with. You should not train your models on different training data than supplied. Your goal is for your custom language model to perform better than any of the other three language models we ask you to implement.</li>
</ul>
We have provided you with a uniform language model so you can see the basic layout, located in UniformLanguageModel.{py,java}.

<p>
To implement a language model you need to implement two functions:
</p><ul>
  <li><b>train(HolbrookCorpus corpus):</b> takes a corpus and trains your language model. Compute any counts or other corpus statistics in this function. See the example UniformLanguageModel for how to access sentences in the corpus and the words in those sentences.</li>
  <li><b>score(List<string> words):</string></b> takes a list of strings as argument and returns the numerical score, which should be the log-probability of the sentence using your language model. Use whatever data you computed in train() here.</li>
</ul>

<h4>Evaluation</h4>
Your language models will be evaluated on the development data set and a held-out test set. The performance of each language model will be evaluated with respect to the performance of our solution implementation. To help with your implementation, we give you the expected performance of each language model on the development set:
<ul>
  <li><b>Laplace Unigram Language Model:</b> 0.11
  </li><li><b>Laplace Bigram Language Model:</b> 0.13
  </li><li><b>Stupid Backoff Language Model:</b>  0.18
  </li><li><b>Custom Language Model:</b> at least as good as Stupid Backoff, so 0.18.
</li></ul>
Note that the performance we expect from your language model is not that great! We have provided you with a very simple edit model, not a lot of training data, and the task is rather difficult. You will receive full credit for implementations which meet the stated thresholds, and a linearly decaying score for accuracy less than the reference.

<h4>Given Code</h4>
The rest of the scaffolding has been provided (reading corpora, computed edit probabilities, computing the argmax correction).
A short summary of the remaining files:
<ul>
  <li><b>SpellCorrect.{py, java}</b>: Computes the most likely correction given a language model and edit model. The main() function here will load all of your language model and print performance on the development data, useful for debugging. It may be useful to comment out some of the tests in main() when developing.
  </li><li><b>EditModel.{py, java}</b>: Reads the count_1edit.txt file and computes the probability of corrections. The candidate corrections are all strings within Damerau-Levenshtein edit distance 1. The probability of no correction is set at .9 (<span class="MathJax_Preview"></span><span class="MathJax" id="MathJax-Element-2-Frame" role="textbox" aria-readonly="true" style=""><nobr><span class="math" id="MathJax-Span-8"><span style="display: inline-block; position: relative; height: 0px; font-size: 125%; width: 4.738em; "><span style="position: absolute; clip: rect(1.235em 1000em 2.604em -0.521em); top: -2.169em; left: 0em; "><span class="mrow" id="MathJax-Span-9"><span class="mi" id="MathJax-Span-10" style="font-family: MathJax_Math; font-style: italic; ">P<span style="display: inline-block; overflow-x: hidden; overflow-y: hidden; height: 1px; width: 0.109em; "></span></span><span class="mo" id="MathJax-Span-11" style="font-family: MathJax_Main; ">(</span><span class="mi" id="MathJax-Span-12" style="font-family: MathJax_Math; font-style: italic; ">x</span><span class="texatom" id="MathJax-Span-13"><span class="mrow" id="MathJax-Span-14"><span class="mo" id="MathJax-Span-15" style="font-family: MathJax_Main; ">|</span></span></span><span class="mi" id="MathJax-Span-16" style="font-family: MathJax_Math; font-style: italic; ">x</span><span class="mo" id="MathJax-Span-17" style="font-family: MathJax_Main; ">)</span><span class="mo" id="MathJax-Span-18" style="font-family: MathJax_Main; padding-left: 0.278em; ">=</span><span class="mn" id="MathJax-Span-19" style="font-family: MathJax_Main; padding-left: 0.278em; ">.9</span></span><span style="display: inline-block; width: 0px; height: 2.169em; "></span></span></span><span style="border-left-width: 0em; border-left-style: solid; border-left-color: initial; display: inline-block; overflow-x: hidden; overflow-y: hidden; width: 0px; height: 1.404em; vertical-align: -0.389em; "></span></span></nobr></span><script type="math/tex" id="MathJax-Element-2">P(x|x) = .9</script>). Note that the EditModel isn't great, but your language models will be evaluated using this model, so it won't effect your grade.</li>
  <li><b>HolbrookCorpus.{py, java}</b>: Reads in the corpus and generates test cases from misspellings.</li>
  <li><b>Sentence.{py, java}</b>: Holds the data for a given sentence, which is a list of Datums. Contains helper functions for generating the correct sentence and the sentence with the spelling error.</li>
  <li><b>Datum.{py, java}</b>: Contains two strings, word and error. The word is the corrected word, and error contains the spelling error. For tokens which are spelled correctly in the corpus, error = ''.</li>
</ul>

<h4>Running the code</h4>
For Java, execute
<pre>$ cd java
$ mkdir classes
$ javac -d classes -target 1.6 *.java
$ java -cp classes SpellCorrect 
</pre>
This will train all of the language models and output their performance.

<p>
Similarly, for python, execute
</p><pre>$ cd python
$ python SpellCorrect.py
</pre>

<h4>Submitting Your Solution</h4>
For each language, we have provided a submission script/program which will run your program and autocorrect a given corpus.  This data will then be sent to our servers where it will be stored and graded once the assignment is due.  For each language, the submission program will programmatically call your script and then prompt you for your username and a password.  The password can be found at the top of the Assignments page on this website.  It will also ask you about which parts of the assignment you wish to submit.  For this assignment your system will be evaluated in eight parts: each language model will be evaluated on both the development data and a held-out test set.
<p>
Here are the basic shell commands which you will need to execute for Java:
</p><pre>$ cd java
$ mkdir classes
$ javac -d classes *.java
$ java -cp classes Submit
</pre>

and for Python
<pre>$ cd python
$ python submit.py
</pre>

It is important that these scripts be executed from either the java or python directories so that they can easily import the code you've written and so that the relative path "../data/" correctly points to the training and development data (it is hard-coded into the submission scripts).</td>
		</tr>
	</tbody>
</table>
        </div>
    </div>
            <div class="hidden">
        This page features MathJax technology to render mathematical formulae.
        If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.
    </div>



<div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; border-image: initial; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-weight: normal; font-style: normal; font-family: MathJax_Main, sans-serif; font-size: 40px; "></div></body></html>